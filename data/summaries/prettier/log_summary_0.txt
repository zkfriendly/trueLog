[description]
Prettier, a code formatter

[milestones]
• Support for reading config from package.json with JSONC syntax on Bun.
• Migration from Docusaurus 1 to Docusaurus 3 for website documentation.
• Implementation of objectWrap config option.
• Improved FormatResultsCache for enhanced caching.
• Replaced chalk with node-style-text in script files for better styling.
• Numerous dependency updates and related chores.
• Improved Angular ICU expression printing.
• Added tests for import.defer().
• Implemented objectWrap config option.
• Improved FormatResultsCache.
• Replaced chalk with node-style-text in release script.
• Updated Angular ICU expression print.
• Added tests for import.defer().
• Dropped Node.js 18 support for development builds.
• Updated yarn to v4.6.0.
• Implemented objectWrap config option.
• Added support for TS config files.
• Supported Vue .prop shorthand.
• Added action to publish preview release for PRs.
• Updated release instructions.
• Released Prettier 3.4.2, 3.4.1, 3.4.0, 3.3.3, 3.3.2, 3.3.1, 3.3.0, 3.2.5, 3.2.4, 3.2.3, 3.2.2, 3.2.1, 3.2.0, 3.1.1, 3.0.3, 3.0.1 and 3.0.0.
• Added support for Angular @let declaration syntax.
• Removed support for "minimal" Pipeline Operator and importReflection.
• Reduced size of typescript plugin.
• Upgraded typescript to v5.5.
• Corrected wrong trailing comma position after comment in SCSS.
• Improved formatting of React useImperativeHandle hook.
• Added --cache CLI option.
• Bundled printers in plugins.
• Auto-generated types files for plugins.
• Added name to errors.
• Supported import attributes.
• Migrated from probot/no-response to lee-dohm/no-response.
• Migrated various parsers and the CLI to ES Modules.
• Bundled pure ESM packages as CommonJS in vendors directory.
• Dropped support for Node.js 10 and 12.
• Various documentation updates and corrections.
• Added funding field to package.json.


[patterns]
• Extensive use of Renovate Bot for dependency management, indicating a focus on automated dependency updates and security.
• Regular releases and changelog updates, demonstrating a commitment to frequent releases and well-documented changes.
• Focus on improving performance, shown by commits aimed at reducing bundle sizes and improving computational complexity.
• Addressing technical debt through dependency updates, code refactoring, and dropping support for older Node.js versions.
• Active community engagement, as evidenced by contributions from various developers and responses to issues.
• Transitioning to ES Modules, indicating a move towards modern JavaScript standards.
• Increased use of internal ESLint rules and linters like eslint-plugin-unicorn, indicating a focus on code quality and maintainability.
• Attention to developer experience, demonstrated by improvements to build scripts, release processes, and testing infrastructure.
• Focus on TypeScript support and Angular features, suggesting these are important ecosystems for Prettier.
• Dedicated effort to improve documentation and address issues reported by users.
• Regular website updates and blog posts, demonstrating good communication with the community.
• Gradual deprecation of older features and APIs.
